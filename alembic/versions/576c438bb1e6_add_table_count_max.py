# -*- coding: utf-8 -*-
"""add table count max

Revision ID: 576c438bb1e6
Revises: c75c1feeef15
Create Date: 2025-02-28 15:53:02.061890

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "576c438bb1e6"
down_revision: Union[str, None] = "c75c1feeef15"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "count_maximun_capacity",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("filial_id", sa.Integer(), nullable=False),
        sa.Column("count_maximun", sa.Integer(), nullable=False),
        sa.Column("time_update", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["filial_id"],
            ["filiais.filial_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "event_count", "timestamp", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "event_count_temp",
        "event_time",
        existing_type=postgresql.TIMESTAMP(precision=4),
        type_=postgresql.TIMESTAMP(timezone=True, precision=4),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "event_count_temp",
        "event_time",
        existing_type=postgresql.TIMESTAMP(timezone=True, precision=4),
        type_=postgresql.TIMESTAMP(precision=4),
        existing_nullable=True,
    )
    op.alter_column(
        "event_count", "timestamp", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.drop_table("count_maximun_capacity")
    # ### end Alembic commands ###
